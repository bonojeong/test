{"version":3,"sources":["data.js","Cart.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","Cart","props","state","useSelector","console","log","dispatch","useDispatch","Table","striped","bordered","hover","reducer","map","a","i","name","quan","onClick","type","데이터","alert열렸니","className","Detail","lazy","재고context","React","createContext","Card","useContext","history","useHistory","push","shoes","src","width","Test","재고","App","useState","Data","shoes변경","재고변경","Navbar","bg","expand","Container","Brand","href","Toggle","Collapse","Nav","Link","as","to","NavDropdown","Item","Divider","exact","path","Provider","value","axios","get","then","result","data","catch","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","초기값","store","createStore","combineReducers","액션","found","findIndex","copy","reducer2","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0efc4fa5.chunk.js","sourcesContent":["//다른 파일로 내보내고 싶을 때 export 사용!!\r\n// 그리고 변수도 같이 보내고 싶을 때 export 뒤에 적으면 됨\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default\r\n[\r\n    {\r\n        id : 0,\r\n        title : \"White and Black\",\r\n        content : \"Born in France\",\r\n        price : 120000\r\n    },\r\n\r\n    {\r\n        id : 1,\r\n        title : \"Red Knit\",\r\n        content : \"Born in Seoul\",\r\n        price : 110000\r\n    },\r\n\r\n    {\r\n        id : 2,\r\n        title : \"Grey Yordan\",\r\n        content : \"Born in the States\",\r\n        price : 130000\r\n    }\r\n]","import React, { useEffect, memo } from 'react';\r\nimport {Table} from 'react-bootstrap';\r\nimport { connect, useDispatch, useSelector } from 'react-redux';\r\n\r\nfunction Cart(props){\r\n\r\n    //신문법 redux에 있는 모든 state 끌어다옴 \r\n    let state = useSelector( (state)=> state )\r\n    console.log(state)\r\n    //신문법 훅 dispatch 쉬운방법 \r\n    let dispatch = useDispatch();\r\n\r\n    return (\r\n        <div>\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>상품명</th>\r\n                        <th>수량</th>\r\n                        <th>변경</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        state.reducer.map( (a,i)=>{\r\n                            return (\r\n                                <tr key={i}>\r\n                                    <td> { a.id } </td>\r\n                                    <td> { a.name } </td>\r\n                                    <td> { a.quan } </td>\r\n                                    <td>\r\n                                        {/* 수량 증가 기능 */}\r\n                                        <button onClick ={ ()=>{\r\n                                            //redux 데이터 수정은 dispatch()안에 index.js에서 \r\n                                            //설정한 액션.type값을 적어준다 \r\n                                            dispatch({ type : '수량증가' , 데이터 : a.id })\r\n                                        }}>+\r\n                                        </button>\r\n\r\n                                        {/* 수량 감소 기능 */}\r\n                                        <button onClick = { () => {\r\n                                            dispatch({ type : '수량감소' , 데이터 : a.id })\r\n                                        }}>-\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n            {\r\n                props.alert열렸니 === true\r\n                ? (\r\n                    <div className =\"my-alert\">\r\n                        <p>지금 구매하시면 신규할인 20%</p>\r\n                        <button onClick={ ()=>{\r\n                            props.dispatch({ type : 'alert닫기' })\r\n                        }}>닫기</button>\r\n                    </div>\r\n                )\r\n                :null\r\n            }\r\n            {/* <Parent 이름='존박' 나이='20'></Parent> */}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction Parent(props){\r\n    return (\r\n        <div>\r\n            <Child1 이름={props.이름}></Child1>\r\n            <Child2 나이={props.나이}></Child2>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Child1(){\r\n    useEffect(()=>{ console.log('렌더링됨1') })\r\n    return <div>1111</div>\r\n}\r\n//memo로 불필요한 렌더링은 안되게 만듦 ( 다른데이터가 바뀌어도 렌더링이 되지 않음)\r\nlet Child2 = memo(function(){\r\n    useEffect(()=>{ console.log('렌더링됨2') })\r\n    return <div>2222</div>\r\n});\r\n\r\n\r\n// function state를props화(state){\r\n//     return {\r\n//         state : state.reducer,\r\n//         alert열렸니 : state.reducer2\r\n//     }\r\n// }\r\n// export default connect(state를props화)(Cart)\r\n\r\nexport default Cart;","/* eslint-disable*/ \r\n\r\nimport React, {useContext, useEffect, useState, lazy, Suspense} from 'react';\r\nimport { Navbar,Container,Nav,NavDropdown} from 'react-bootstrap';\r\nimport './App.css';\r\nimport Data from './data.js';\r\n// import Detail from './Detail.js';\r\n\r\n//바로 로딩이 되지않고 Detail.js 가 필요할때 로딩이 되게 부담을 덜 준다 ~\r\nlet Detail = lazy(()=>{ return import('./Detail.js') })\r\n\r\nimport axios from 'axios'\r\nimport { Link, Route, Switch, useHistory} from 'react-router-dom';\r\nimport Cart from './Cart.js';\r\n\r\nexport let 재고context = React.createContext();\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  let [shoes, shoes변경] = useState(Data);\r\n  let [재고, 재고변경] = useState([10,11,12])\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar bg=\"light\" expand=\"lg\">\r\n        <Container>\r\n          <Navbar.Brand href=\"/\">ShoeShop</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"me-auto\">\r\n              <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\r\n              <Nav.Link as={Link} to=\"/detail/0\">Detail</Nav.Link>\r\n              <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n              </NavDropdown>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      \r\n\r\n    <Switch>\r\n      {/* \r\n      라우팅하는법 !!!!!!!!!!!!!!!!!! \r\n       exact 속성은 path에 적힌 주소만 입력 되었을때 보여줌 겹치거나 중첩되는건 다 안보여줌 \r\n      */}\r\n      \r\n      <Route exact path=\"/\">\r\n        <div className= \"jumbo\">\r\n          <h1>20% Season Off</h1>\r\n          <p className=\"haha\">\r\n            asofiosajfiosaiofjsafiosaiofjsaiofjsaiojfiosaifjsafjsaiofjiosafjoisajfiosajiofasjf\r\n          </p>\r\n          <p>\r\n            <button>Learn more</button>\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"container\">\r\n\r\n          {/* Provider로 감싼 곳에만 useState 값을 어디든지 공유할수있음 */}\r\n          <재고context.Provider value={재고}>\r\n\r\n          <div className=\"row\">\r\n            {/* shoes갯수만큼 map으로 Card컴포넌트 생성! */}\r\n            {\r\n              shoes.map( (a,i)=>{\r\n                return <Card shoes={shoes[i]} i={i} key={i} />\r\n              })\r\n            }\r\n          </div>\r\n\r\n          </재고context.Provider>\r\n\r\n          <button className=\"btn btn-primary\" onClick={ ()=>{ \r\n\r\n            //서버에 get 요청하는 코드 ! ()안에 url 적기\r\n            axios.get('https://codingapple1.github.io/shop/data2.json')\r\n            .then( (result)=>{ \r\n              shoes변경( [...shoes, ...result.data] )\r\n            })//성공했을때 코드\r\n\r\n            .catch( ()=>{ \r\n\r\n              console.log('실패 ~ ')\r\n            })//실패했을때 코드\r\n\r\n          }}>더보기</button>\r\n        </div>\r\n      </Route>\r\n\r\n      {/* \r\n      :id 는 아무문자난 받겠다는 URL 작명법 \r\n      콜론뒤에는 아무거나 작명가능\r\n      */}\r\n      <Route path=\"/detail/:id\">\r\n        <재고context.Provider value={재고}>\r\n          {/* lazy문법이랑 같이 쓴다. fallback은 로딩이 될 때 보여주는 것 */}\r\n          <Suspense fallback={ <div>로딩중이에요</div> }>\r\n            <Detail shoes={shoes} 재고={재고} 재고변경={재고변경}/>\r\n          </Suspense>\r\n        </재고context.Provider>\r\n      </Route>\r\n\r\n      <Route path=\"/cart\">\r\n        <Cart></Cart>\r\n      </Route>\r\n\r\n      {/* <Route path=\"/:id\">\r\n        <div>아무거나 적었을때 이거 보여주삼 ~</div>\r\n      </Route> */}\r\n\r\n\r\n    </Switch>  \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nfunction Bpp(){\r\n  let [count, setCount] = useState(0);\r\n  let [age, setAge] = useState(20);\r\n\r\n  useEffect( ()=>{\r\n    //첫페이지를 로드할 때 한번 실행이 되기 때문에\r\n    //count가 0이 아닐 때만 실행이 되라 ~ 조건 추가 ~ \r\n    if( count !=0 && count < 3 ){\r\n      setAge(age+1)\r\n    }\r\n  },[count])\r\n\r\n\r\n    return (\r\n      <div>\r\n        <div>안녕하십니까 전 {age}</div>\r\n        <button onClick={()=>{\r\n          setCount(count+1);\r\n        }}>누르면한살먹기</button>\r\n      </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n//부모 컴포넌트의 파라미터도 가져올 수 있음 props.i 처럼 똑같이 쓰면됨 ! \r\nfunction Card(props){\r\n\r\n  let 재고 = useContext(재고context);\r\n  let history = useHistory()\r\n\r\n  return(\r\n    <div className=\"col-md-4\" onClick={()=>{ history.push('/detail/' + props.shoes.id) }}>\r\n      <img src={`https://codingapple1.github.io/shop/shoes${props.i+1}.jpg`} width=\"100%\" />\r\n      <h4>{ props.shoes.title }</h4>\r\n      <p>{ props.shoes.content } & { props.shoes.price }</p>\r\n      <Test 재고={props.재고}></Test>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Test(props){\r\n  let 재고 = useContext(재고context)\r\n  return <p>재고 : {재고[0]}</p>\r\n}\r\n\r\nexport default App;","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nimport {connect, Provider} from 'react-redux';\r\nimport {combineReducers, createStore} from 'redux';\r\n\r\n\r\nlet alert초기값 = true;\r\n\r\nfunction reducer2(state = alert초기값, 액션){\r\n  if(액션.type === 'alert닫기'){\r\n    state = false;\r\n    return state;\r\n\r\n  }else{\r\n    return state\r\n  }\r\n}\r\n\r\n\r\n\r\nlet 초기값 = [\r\n  { id: 0, name: '멋진신발', quan: 2 },\r\n  { id: 1, name: '멋진신발2', quan: 1 }\r\n];\r\n\r\nfunction reducer( state = 초기값, 액션){\r\n  if ( 액션.type ==='항목추가' ){\r\n    \r\n    //state 안에 id : 액션.데이터 인게 있냐 ?????? 중복 체크 ~ \r\n    let found  = state.findIndex( (a)=>{ return a.id === 액션.데이터.id });\r\n\r\n    // 중복되는게 있다 !!??\r\n    // found에 몇번째인지 값을 저장해두고 copy[found]의 수량증가 ~ \r\n    if ( found >= 0 ){\r\n      let copy = [...state];\r\n      copy[found].quan++;\r\n      return copy\r\n\r\n    } else {\r\n      let copy = [...state];\r\n      copy.push(액션.데이터);\r\n      return copy\r\n    }\r\n\r\n  }\r\n\r\n  //수량증가라는 액션이 나오면 밑의 함수가 작동\r\n  else if( 액션.type === '수량증가' ){\r\n\r\n    //state변경하기 위해서 복사본 생성 [...??]이런식으로\r\n    let copy = [...state];\r\n    copy[액션.데이터].quan++;\r\n    return copy\r\n\r\n  }else if ( 액션.type === '수량감소') {\r\n    let copy = [...state]\r\n    copy[액션.데이터].quan--;\r\n    return copy\r\n    \r\n  }else {\r\n    return state\r\n  }\r\n\r\n}\r\n\r\n//모든 redux reducer들 모아두는 문법 == combineReducers()\r\nlet store = createStore(combineReducers( { reducer,reducer2 } ));\r\n\r\n\r\n//라우터로 여러페이지 이동가능하게 만들었음!\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}